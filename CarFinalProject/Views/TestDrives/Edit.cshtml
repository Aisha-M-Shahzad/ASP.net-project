@model CarFinalProject.Models.TestDrive

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>TestDrive</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerName, "CustomerName", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if(User.Identity.Name == "admin@admin.com")
                {
                    <b>@Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value=Model.CustomerName } })</b>
                }
                else
                {
                    <b>@Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = User.Identity.Name } })</b>
                }
                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CarId, "Select Car", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CarId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CarId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.BookDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TestDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TestDate, new { htmlAttributes = new { @class = "form-control", type="date" } })
                @Html.ValidationMessageFor(model => model.TestDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<p style="color: red;">
    @Session["test-error"]
    @{ 
        Session["test-error"] = null;
    }
</p>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
